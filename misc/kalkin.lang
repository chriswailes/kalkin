<?xml version="1.0" encoding="UTF-8"?>

<language id="kalkin" _name="Kalkin" version="2.0" _section="Sources">

	<!--
		Information about this language description.
	-->
	<metadata>
		<property name="mimetypes">text/x-kalkin</property>
		<property name="globs">*.k;*.ks;*.kalkin</property>
		<property name="line-comment-start">#</property>
		<property name="block-comment-start">#*</property>
		<property name="block-comment-end">*#</property>
	</metadata>

	<!--
		Information on what the highlighting should look like.
	-->
	<styles>
		<style id="annotation" _name="Annotation"          map-to="def:preprocessor"     />
		<style id="boolean"    _name="Boolean"             map-to="def:boolean"          />
		<style id="comment"    _name="Comment"             map-to="def:comment"          />
		<style id="ivar"       _name="Instance Variable"   map-to="def:special-constant" />
		<style id="keyword"    _name="Keyword"             map-to="def:keyword"          />
		<style id="number"     _name="Number"              map-to="def:decimal"          />
		<style id="string"     _name="String"              map-to="def:string"           />
		<style id="symbol"     _name="Symbol"              map-to="def:string"           />
		<style id="type"       _name="Data Type"           map-to="def:type"             />
		<style id="var"        _name="Variable"            map-to="def:identifier"       />
	</styles>

	<!--
		The language definition proper.
	-->
	<definitions>
		<context id="annotations" style-ref="annotation">
			<match>@[a-zA-Z][a-zA-Z0-9_]*</match>
		</context>

		<context id="block-comment" style-ref="comment" class="comment" class-disabled="no-spell-check">
			<start>#\*</start>
			<end>\*#</end>
			<include>
				<context ref="block-comment"/>
				<context ref="def:in-comment"/>
			</include>
		</context>

		<context id="booleans" style-ref="boolean">
			<keyword>true</keyword>
			<keyword>false</keyword>
		</context>

		<context id="line-comment" style-ref="comment" end-at-line-end="true" class="comment" class-disabled="no-spell-check">
			<start>#</start>
			<include>
				<context ref="def:in-line-comment"/>
			</include>
		</context>

		<context id="instance-variables" style-ref="ivar">
			<match>\$[a-z][a-zA-Z0-9_]*</match>
		</context>

		<context id="special-variables" style-ref="ivar">
			<keyword>Implementer</keyword>
			<keyword>self</keyword>
		</context>

		<!-- Kalkin's keywords context -->
		<context id="keywords" style-ref="keyword">
			<prefix>(?&lt;!\.)</prefix>
			<keyword>accept</keyword>
			<keyword>adt</keyword>
			<keyword>alias(-([ci]))?</keyword>
			<keyword>and</keyword>
			<keyword>as</keyword>
			<keyword>big</keyword>
			<keyword>class</keyword>
			<keyword>constructor</keyword>
			<keyword>def(-([ci]))?</keyword>
			<keyword>default</keyword>
			<keyword>destructure</keyword>
			<keyword>do</keyword>
			<keyword>else</keyword>
			<keyword>end</keyword>
			<keyword>handle</keyword>
			<keyword>hide(-([ci]))?</keyword>
			<keyword>if</keyword>
			<keyword>implements</keyword>
			<keyword>import</keyword>
			<keyword>in</keyword>
			<keyword>include</keyword>
			<keyword>interface</keyword>
			<keyword>lambda</keyword>
			<keyword>let(-([ci]))?</keyword>
			<keyword>little</keyword>
			<keyword>match</keyword>
			<keyword>meet(-([ci]))?</keyword>
			<keyword>module</keyword>
			<keyword>namespace</keyword>
			<keyword>native</keyword>
			<keyword>nor</keyword>
			<keyword>not</keyword>
			<keyword>on</keyword>
			<keyword>or</keyword>
			<keyword>poly</keyword>
			<keyword>polymorphic</keyword>
			<keyword>private</keyword>
			<keyword>protected</keyword>
			<keyword>public</keyword>
			<keyword>raise</keyword>
			<keyword>receive</keyword>
			<keyword>reject</keyword>
			<keyword>rename(-([ci]))?</keyword>
			<keyword>reopen</keyword>
			<keyword>return</keyword>
			<keyword>require(-([ci]))?</keyword>
			<keyword>signed</keyword>
			<keyword>splat</keyword>
			<keyword>super</keyword>
			<keyword>synchronizer</keyword>
			<keyword>sync</keyword>
			<keyword>then</keyword>
			<keyword>unsigned</keyword>
			<keyword>use</keyword>
			<keyword>void</keyword>
			<keyword>when</keyword>
			<keyword>where</keyword>
			<keyword>with</keyword>
			<keyword>xor</keyword>
		</context>

		<!-- Kalkin's number context -->
		<context id="numbers" style-ref="number">
			<match>((0x[abcdef\d]+)|(([\d]*\.)?[\d]+([eE][+-]?[\d]+)?))</match>
		</context>

		<!-- Kalkin's string context -->
		<context id="strings" end-at-line-end="true" style-ref="string" class="spell-check">
			<start>"</start>
			<end>"</end>

			<include>
				<context id="escape" style-ref="escaped-character">
					<match>\\.</match>
				</context>
			</include>
		</context>

		<context id="symbols" style-ref="symbol">
			<match>(?&lt;!:):[a-zA-Z_]+</match>
		</context>

		<!-- Kalkin's type keywords context -->
		<context id="types" style-ref="type">
			<match>[A-Z][A-Za-z0-9_]*</match>
		</context>

		<context id="identifiers" style-ref="identifier">
			<match>[a-z][A-Za-z0-9_]*</match>
		</context>

		<!-- The main Kalkin context -->
		<context id="kalkin" class="no-spell-check">
			<include>
				<context ref="annotations"           />
				<context ref="block-comment"         />
				<context ref="booleans"              />
				<context ref="line-comment"          />
				<context ref="instance-variables"    />
				<context ref="special-variables"     />
				<context ref="keywords"              />
				<context ref="numbers"               />
				<context ref="strings"               />
				<context ref="symbols"               />
				<context ref="types"                 />
				<context ref="identifiers"           />
			</include>
		</context>
	</definitions>
</language>
